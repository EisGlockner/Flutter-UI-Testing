import 'package:email_validator/email_validator.dart';import 'package:flutter/material.dart';import 'package:go_router/go_router.dart';import '../../../defaults.dart' as defaults;class LoginForm extends StatelessWidget {  const LoginForm({super.key});  @override  Widget build(BuildContext context) {    return Form(      child: Column(        children: [          const Text(            'resQnect Admin',            style: TextStyle(fontWeight: FontWeight.bold, fontSize: defaults.defaultFontSize),          ),          const SizedBox(height: defaults.largePadding),          _buildEmailFormField(),          const SizedBox(height: defaults.standardPadding),          _buildPasswordFormField(),          const SizedBox(height: defaults.standardPadding),          TextButton(            style: TextButton.styleFrom(padding: const EdgeInsets.all(defaults.mediumPadding)),            onPressed: () {              context.go('/testscreen');            },            child: const Text(              'LOGIN',              style: TextStyle(fontSize: defaults.defaultFontSize),            ),          ),          const SizedBox(height: defaults.standardPadding),        ],      ),    );  }  Widget _buildEmailFormField() {    return TextFormField(      autovalidateMode: AutovalidateMode.onUserInteraction,      validator: (value) => value!.isNotEmpty && EmailValidator.validate(value) ? null : 'Enter a valid email address',      keyboardType: TextInputType.emailAddress,      textInputAction: TextInputAction.next,      cursorColor: defaults.ciColor,      decoration: const InputDecoration(        hintText: 'Email',        // errorText: 'well',        prefixIcon: Padding(          padding: EdgeInsets.all(defaults.standardPadding),          child: Icon(Icons.person),        ),      ),    );  }  Widget _buildPasswordFormField() {    return TextFormField(      textInputAction: TextInputAction.done,      obscureText: true,      cursorColor: defaults.ciColor,      decoration: const InputDecoration(        hintText: 'Password',        // errorText: 'well',        prefixIcon: Padding(          padding: EdgeInsets.all(defaults.standardPadding),          child: Icon(Icons.lock),        ),      ),    );  }}